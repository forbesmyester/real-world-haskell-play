
-- The following is pretending to be a functor because
--
--     fmap id (CJust 0 "hi")
--
-- return `CJust 1 "hi"`, which violates the first rule of functors which
-- is:
--
--     fmap id a = a
--
-- The second rule of functors is:
--
--     fmap (f . g) = fmap f . fmap g
--
-- data CMaybe a = CNothing | CJust Int a deriving (Show)
--
-- instance Functor CMaybe where
--     fmap _ CNothing = CNothing
--     fmap f (CJust counter x) = CJust (counter+1) (f x) 
